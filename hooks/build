#!/bin/bash

# Autobuild the Image on Docker Hub with advanced options and buildx for multiarch images
# read more: https://github.com/Tob1asDocker/dockerhubhooksexample

# '--push' shorthand for '--output=type=registry'

set -ex

echo "### RUN build START: using buildx ###"
echo "Image Name: ${IMAGE_NAME} (${DOCKER_IMAGE)) (Repo: ${DOCKER_REPO}, Tag: ${DOCKER_TAG})"
echo "Dockerfile Path/Name: ${DOCKERFILE_PATH}"
#BUILDPLATFORM="${BUILDPLATFORM:-"linux/amd64,linux/arm64"}"
BUILDPLATFORM="${BUILDPLATFORM:-"linux/amd64"}"
echo "Architectures=${BUILDPLATFORM}"

echo "Starting registry"

# Start the local registry
docker run -d -p 127.0.0.1:5000:5000 --rm --name registry registry:2

# Go ahead and push to the local registry
docker buildx build --build-arg BUILD_DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" --build-arg VCS_REF="$(git rev-parse --short HEAD)" --tag "${IMAGE_NAME}" --platform "${BUILDPLATFORM}" --file "${DOCKERFILE_PATH}" -o type=docker,dest=awesome.img .

docker image ls

docker load --input awesome.img

docker image ls

# Tag the local version so that we can push in the push script, should we choose
#docker tag ${IMAGE_NAME} ${OLD_IMAGE_NAME}

# Confirm the build really was both archs
#docker buildx inspect

echo "### RUN build END"
