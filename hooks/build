#!/bin/bash

# Autobuild the Image on Docker Hub with advanced options and buildx for multiarch images
# read more: https://github.com/Tob1asDocker/dockerhubhooksexample

# '--push' shorthand for '--output=type=registry'

set -ex

# For this script, set the repo to localhost
OLD_DOCKER_REPO=${DOCKER_REPO}
DOCKER_REPO=`echo ${DOCKER_REPO} | sed -e "s/index.docker.io/localhost:5000/"`
DOCKER_IMAGE=`echo ${DOCKER_IMAGE} | sed -e "s/index.docker.io/localhost:5000/"`

echo "### RUN build START: using buildx ###"
echo "Image Name: ${IMAGE_NAME} (Repo: ${DOCKER_REPO}, Old Repo: ${OLD_DOCKER_REPO}, Tag: ${DOCKER_TAG})"
echo "Dockerfile Path/Name: ${DOCKERFILE_PATH}"
#BUILDPLATFORM="${BUILDPLATFORM:-"linux/amd64,linux/arm64"}"
BUILDPLATFORM="${BUILDPLATFORM:-"linux/amd64"}"
echo "Architectures=${BUILDPLATFORM}"

# Go ahead and push to the local registry
docker buildx build --build-arg BUILD_DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" --build-arg VCS_REF="$(git rev-parse --short HEAD)" --tag "${IMAGE_NAME}" --platform "${BUILDPLATFORM}" --file "${DOCKERFILE_PATH}" --push .

# Tag the local version so that we can push in the push script, should we choose
docker tag ${DOCKER_REPO}:${DOCKER_TAG} ${OLD_DOCKER_REPO}:${DOCKER_TAG}

# Confirm the build really was both archs
#docker buildx inspect

echo "### RUN build END"
